#include <olectl.h>
// icwhelp.idl : IDL source for icwhelp.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (icwhelp.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";

    

    [
        object,
        uuid(1E794A09-86F4-11D1-ADD8-0000F87734F0),
        dual,
        helpstring("IRefDial Interface"),
        pointer_default(unique)
    ]
    interface IRefDial : IDispatch
    {
        [id(1), helpstring("method DoConnect")] HRESULT DoConnect([out, retval] BOOL *pbRetVal);
        [propget, id(2), helpstring("property DownloadStatusString")] HRESULT DownloadStatusString([out, retval] BSTR *pVal);
        [id(4), helpstring("method SetupForDialing")] HRESULT SetupForDialing(BSTR bstrISPFILE, DWORD dwCountry, BSTR bstrAreaCode, DWORD dwFlag, [out, retval] BOOL *pbRetVal);
        [propget, id(5), helpstring("property QuitWizard")] HRESULT QuitWizard([out, retval] BOOL *pVal);
        [propget, id(6), helpstring("property UserPickNumber")] HRESULT UserPickNumber([out, retval] BOOL *pVal);
        [propget, id(7), helpstring("property DialPhoneNumber")] HRESULT DialPhoneNumber([out, retval] BSTR *pVal);
        [propput, id(7), helpstring("property DialPhoneNumber")] HRESULT DialPhoneNumber([in] BSTR newVal);
        [propget, id(8), helpstring("property URL")] HRESULT URL([out, retval] BSTR *pVal);
        [propget, id(9), helpstring("property PromoCode")] HRESULT PromoCode([out, retval] BSTR *pVal);
        [propput, id(9), helpstring("property PromoCode")] HRESULT PromoCode([in] BSTR newVal);
        [propget, id(10), helpstring("property ProductCode")] HRESULT ProductCode([out, retval] BSTR *pVal);
        [propput, id(10), helpstring("property ProductCode")] HRESULT ProductCode([in] BSTR newVal);
        [id(11), helpstring("method DoOfferDownload")] HRESULT DoOfferDownload([out, retval] BOOL *pbRetVal);
        [propget, id(12), helpstring("property DialStatusString")] HRESULT DialStatusString([out, retval] BSTR *pVal);
        [id(13), helpstring("method DoHangup")] HRESULT DoHangup();
        [id(14), helpstring("method ProcessSignedPID")] HRESULT ProcessSignedPID([out, retval] BOOL *pbRetVal);
        [propget, id(15), helpstring("property SignedPID")] HRESULT SignedPID([out, retval] BSTR *pVal);
        [id(16), helpstring("method FormReferralServerURL")] HRESULT FormReferralServerURL([out, retval] BOOL *pbRetVal);
        [propget, id(17), helpstring("property SignupURL")] HRESULT SignupURL([out, retval] BSTR *pVal);
        [propget, id(18), helpstring("property TryAgain")] HRESULT TryAgain([out, retval] BOOL *pVal);
        [propget, id(19), helpstring("property DialErrorMsg")] HRESULT DialErrorMsg([out, retval] BSTR *pVal);
        [id(20), helpstring("method ModemEnum_Reset")] HRESULT ModemEnum_Reset();
        [id(21), helpstring("method ModemEnum_Next")] HRESULT ModemEnum_Next([out, retval] BSTR *pDeviceName);
        [propget, id(22), helpstring("property ModemEnum_NumDevices")] HRESULT ModemEnum_NumDevices([out, retval] long *pVal);
        [propget, id(23), helpstring("property SupportNumber")] HRESULT SupportNumber([out, retval] BSTR *pVal);
        [id(24), helpstring("method ShowDialingProperties")] HRESULT ShowDialingProperties([out,retval] BOOL *pbRetVal);
        [id(25), helpstring("method ShowPhoneBook")] HRESULT ShowPhoneBook([in] DWORD dwCountryCode, [in] long newVal, [out,retval] BOOL *pbRetVal);
        [id(26), helpstring("method ValidatePhoneNumber")] HRESULT ValidatePhoneNumber([in] BSTR bstrPhoneNumber, [out,retval] BOOL *pbRetVal);
        [propget, id(27), helpstring("property HavePhoneBook")] HRESULT HavePhoneBook([out, retval] BOOL *pVal);
        [propget, id(28), helpstring("property BrandingFlags")] HRESULT BrandingFlags([out, retval] long *pVal);
        [propput, id(28), helpstring("property BrandingFlags")] HRESULT BrandingFlags([in] long newVal);
        [propget, id(29), helpstring("property CurrentModem")]  HRESULT CurrentModem([out, retval] long *pVal);
        [propput, id(29), helpstring("property CurrentModem")]  HRESULT CurrentModem([in] long newVal);
        [propget, id(30), helpstring("property ISPSupportPhoneNumber")] HRESULT ISPSupportPhoneNumber([out, retval] BSTR *pVal);
        [propput, id(30), helpstring("property ISPSupportPhoneNumber")] HRESULT ISPSupportPhoneNumber([in] BSTR newVal);
        [propget, id(31), helpstring("property LoggingStartUrl")] HRESULT LoggingStartUrl([out, retval] BSTR *pVal);
        [propget, id(32), helpstring("property LoggingEndUrl")] HRESULT LoggingEndUrl([out, retval] BSTR *pVal);
        [id(33), helpstring("method SelectedPhoneNumber")] HRESULT SelectedPhoneNumber([in] long newVal, [out, retval] BOOL * pbRetVal);
        [id(34), helpstring("method PhoneNumberEnum_Reset")] HRESULT PhoneNumberEnum_Reset();
        [id(35), helpstring("method PhoneNumberEnum_Next")] HRESULT PhoneNumberEnum_Next ([out, retval] BSTR *pNumber);
        [propget, id(36), helpstring("property PhoneNumberEnum_NumDevices")] HRESULT PhoneNumberEnum_NumDevices([out, retval] long *pVal);
        [propget, id(37), helpstring("property DialError")] HRESULT DialError([out, retval] HRESULT *pVal);
        [propput, id(38), helpstring("property Redial")]  HRESULT Redial([in] BOOL newbVal);
        [propget, id(39), helpstring("property SignupURL")] HRESULT AutoConfigURL([out, retval] BSTR *pVal);
        [id(40), helpstring("method DoInit")] HRESULT DoInit();
        [propput, id(41), helpstring("property OemCode")] HRESULT OemCode([in] BSTR newVal);
       	[propput, id(42), helpstring("property AllOfferCode")] HRESULT AllOfferCode([in] long newVal);
        [propget, id(43), helpstring("property ISDNURL")] HRESULT ISDNURL([out, retval] BSTR *pVal);
        [propget, id(44), helpstring("property ISDNAutoConfigURL")] HRESULT ISDNAutoConfigURL([out, retval] BSTR *pVal);
        [propget, id(45), helpstring("property bIsISDNDevice")] HRESULT bIsISDNDevice([out, retval] BOOL *pVal);
		[propput, id(46), helpstring("property ModemOverride")]  HRESULT ModemOverride([in] BOOL newbVal);
        [id(47), helpstring("method RemoveConnectoid")] HRESULT RemoveConnectoid([out, retval] BOOL *pbRetVal);
        [propget, id(48), helpstring("property ISPSupportNumber")] HRESULT ISPSupportNumber([out, retval] BSTR *pVal);
        [propget, id(49), helpstring("property RasGetConnectStatus")] HRESULT RasGetConnectStatus([out, retval] BOOL *pVal);
    };

    [
        object,
        uuid(462F7757-8848-11D1-ADD8-0000F87734F0),
        dual,
        helpstring("IDialErr Interface"),
        pointer_default(unique)
    ]
    interface IDialErr : IDispatch
    {
    };
    

    [
        object,
        uuid(5D8D8F19-8B89-11D1-ADDB-0000F87734F0),
        dual,
        helpstring("ISmartStart Interface"),
        pointer_default(unique)
    ]
    interface ISmartStart : IDispatch
    {
        [id(1), helpstring("method IsInternetCapable")] HRESULT IsInternetCapable([out, retval] BOOL *pbRetVal);
    };
    

    [
        object,
        uuid(7954DD9A-8C2A-11D1-ADDB-0000F87734F0),
        dual,
        helpstring("IICWSystemConfig Interface"),
        pointer_default(unique)
    ]
    interface IICWSystemConfig : IDispatch
    {
        [id(1), helpstring("method ConfigSystem")] HRESULT ConfigSystem([out, retval] BOOL *pbRetVal);
        [propget, id(2), helpstring("property NeedsReboot")] HRESULT NeedsReboot([out, retval] BOOL *pVal);
        [propget, id(3), helpstring("property QuitWizard")] HRESULT QuitWizard([out, retval] BOOL *pVal);
        [id(4), helpstring("method VerifyRASIsRunning")] HRESULT VerifyRASIsRunning([out, retval] BOOL *pbRetVal);
        [propget, id(5), helpstring("property NeedsRestart")] HRESULT NeedsRestart([out, retval] BOOL *pVal);
        [id(6), helpstring("method CheckPasswordCachingPolicy")] HRESULT CheckPasswordCachingPolicy([out, retval] BOOL *pbRetVal);
    };
    

    [
        object,
        uuid(CB632C75-8DD4-11D1-ADDF-0000F87734F0),
        dual,
        helpstring("ITapiLocationInfo Interface"),
        pointer_default(unique)
    ]
    interface ITapiLocationInfo : IDispatch
    {
        [propget, id(1), helpstring("property wNumberOfLocations")] HRESULT wNumberOfLocations([out] short *psVal, [out, retval] long* pCurrLoc);
        [propget, id(2), helpstring("property bstrAreaCode")] HRESULT bstrAreaCode([out, retval] BSTR *pbstrAreaCode);
        [propput, id(2), helpstring("property bstrAreaCode")] HRESULT bstrAreaCode([in] BSTR bstrAreaCode);
        [propget, id(3), helpstring("property lCountryCode")] HRESULT lCountryCode([out, retval] long *plVal);
        [id(4), helpstring("method GetTapiLocationInfo")] HRESULT GetTapiLocationInfo([out, retval] BOOL *pbRetVal);
        [propget, id(5), helpstring("property NumCountries")] HRESULT NumCountries([out, retval] long* pNumOfCountry);
        [propget, id(6), helpstring("property CountryName")] HRESULT CountryName([in] long lCountryIndex, [out] BSTR * pszCountryName, [out, retval] long * pCountryCode);
        [propget, id(7), helpstring("property DefaultCountry")] HRESULT DefaultCountry([out, retval] BSTR *pszCountryName);
        [propget, id(8), helpstring("property LocationName")] HRESULT LocationName([in] long lLocationIndex, [out] BSTR * pszLocationName);
        [propget, id(9), helpstring("property LocationInfo")] HRESULT LocationInfo([in] long lLocationIndex, [out] long *pLocationID, [out] BSTR * pszCountryName, [out] long * pCountryCode, [out, retval] BSTR * pszAreaCode);
        [propput, id(10), helpstring("property LocationId")] HRESULT LocationId([in] long lLocationID);
    };
    
    

    [
        object,
        uuid(9E12E76C-94D6-11D1-ADE2-0000F87734F0),
        dual,
        helpstring("IUserInfo Interface"),
        pointer_default(unique)
    ]
    interface IUserInfo : IDispatch
    {
        [id(1), helpstring("method CollectRegisteredUserInfo")] HRESULT CollectRegisteredUserInfo([out, retval] BOOL *pbRetVal);
        [propget, id(2), helpstring("property Company")] HRESULT Company([out, retval] BSTR *pVal);
        [propput, id(2), helpstring("property Company")] HRESULT Company([in] BSTR newVal);        
        [propget, id(3), helpstring("property FirstName")] HRESULT FirstName([out, retval] BSTR *pVal);
        [propput, id(3), helpstring("property FirstName")] HRESULT FirstName([in] BSTR newVal);
        [propget, id(4), helpstring("property LastName")] HRESULT LastName([out, retval] BSTR *pVal);
        [propput, id(4), helpstring("property LastName")] HRESULT LastName([in] BSTR newVal);
        [propget, id(5), helpstring("property Address1")] HRESULT Address1([out, retval] BSTR *pVal);
        [propput, id(5), helpstring("property Address1")] HRESULT Address1([in] BSTR newVal);
        [propget, id(6), helpstring("property Address2")] HRESULT Address2([out, retval] BSTR *pVal);
        [propput, id(6), helpstring("property Address2")] HRESULT Address2([in] BSTR newVal);
        [propget, id(7), helpstring("property City")] HRESULT City([out, retval] BSTR *pVal);
        [propput, id(7), helpstring("property City")] HRESULT City([in] BSTR newVal);
        [propget, id(8), helpstring("property State")] HRESULT State([out, retval] BSTR *pVal);
        [propput, id(8), helpstring("property State")] HRESULT State([in] BSTR newVal);
        [propget, id(9), helpstring("property ZIPCode")] HRESULT ZIPCode([out, retval] BSTR *pVal);
        [propput, id(9), helpstring("property ZIPCode")] HRESULT ZIPCode([in] BSTR newVal);
        [propget, id(10), helpstring("property PhoneNumber")] HRESULT PhoneNumber([out, retval] BSTR *pVal);
        [propput, id(10), helpstring("property PhoneNumber")] HRESULT PhoneNumber([in] BSTR newVal);
        [propget, id(11), helpstring("property Lcid")] HRESULT Lcid([out, retval] long *pVal);
        [id(12), helpstring("method PersistRegisteredUserInfo")] HRESULT PersistRegisteredUserInfo([out, retval] BOOL *pbRetVal);
    };
    

    [
        object,
        uuid(3724B9A0-9503-11D1-B86A-00A0C90DC849),
        dual,
        helpstring("IWebGate Interface"),
        pointer_default(unique)
    ]
    interface IWebGate : IDispatch
    {
        [propput, id(1), helpstring("property Path")] HRESULT Path([in] BSTR newVal);
        [propput, id(2), helpstring("property FormData")] HRESULT FormData([in] BSTR newVal);
        [id(3), helpstring("method FetchPage")] HRESULT FetchPage([in] DWORD dwKeepPage, [in] DWORD dwDoWait, [out, retval] BOOL *pbRetVal);
        [propget, id(4), helpstring("property Buffer")] HRESULT Buffer([out, retval] BSTR *pVal);
        [propget, id(5), helpstring("property DownloadFname")] HRESULT DownloadFname([out, retval] BSTR *pVal);
        [id(7), helpstring("method DumpBufferToFile")] HRESULT DumpBufferToFile([out] BSTR *pFileName, [out, retval] BOOL *pbRetVal);
    };
    

    [
        object,
        uuid(6342E1B5-94DB-11D1-ADE2-0000F87734F0),
        dual,
        helpstring("IINSHandler Interface"),
        pointer_default(unique)
    ]
    interface IINSHandler : IDispatch
    {
        [id(1), helpstring("method ProcessINS")] HRESULT ProcessINS(BSTR bstrINSFilePath, [out, retval] BOOL *pbRetVal);
        [propget, id(2), helpstring("property NeedRestart")] HRESULT NeedRestart([out, retval] BOOL *pVal);
        [propput, id(3), helpstring("property BrandingFlags")] HRESULT BrandingFlags([in] long lFlags);
        [propget, id(4), helpstring("property DefaultURL")] HRESULT DefaultURL([out, retval] BSTR *pszURL);
		[propput, id(5), helpstring("property SilentMode")] HRESULT SilentMode([in] BOOL bSilent);
    };
[
    uuid(1E7949FA-86F4-11D1-ADD8-0000F87734F0),
    version(1.0),
    helpstring("icwhelp 1.0 Type Library")
]
library ICWHELPLib
{
    importlib("stdole2.tlb");

    [ 
        uuid(07DB96D0-91D8-11D1-ADE1-0000F87734F0),
        helpstring("Event interface for RefDial")
    ]
    dispinterface _RefDialEvents
    {
        properties:
        methods:
        [id(1)] void RasDialStatus();
        [id(2)] void DownloadProgress([in] long lProgress );
        [id(3)] void DownloadComplete([in] BSTR bstrURL, [in] BOOL bSuccess);
        [id(4)] void RasConnectComplete([in] BOOL bSuccess);
    };


    [
        uuid(1E794A0A-86F4-11D1-ADD8-0000F87734F0),
        helpstring("RefDial Class")
    ]
    coclass RefDial
    {
        [default] interface IRefDial;
        [default, source] dispinterface _RefDialEvents;
    };
    [
        uuid(462F7758-8848-11D1-ADD8-0000F87734F0),
        helpstring("DialErr Class")
    ]
    coclass DialErr
    {
        [default] interface IDialErr;
    };
    [
        uuid(5D8D8F1A-8B89-11D1-ADDB-0000F87734F0),
        helpstring("SmartStart Class")
    ]
    coclass SmartStart
    {
        [default] interface ISmartStart;
    };
    [
        uuid(7954DD9B-8C2A-11D1-ADDB-0000F87734F0),
        helpstring("ICWSystemConfig Class")
    ]
    coclass ICWSystemConfig
    {
        [default] interface IICWSystemConfig;
    };
    [
        uuid(CB632C76-8DD4-11D1-ADDF-0000F87734F0),
        helpstring("TapiLocationInfo Class")
    ]
    coclass TapiLocationInfo
    {
        [default] interface ITapiLocationInfo;
    };
    [
        uuid(9E12E76D-94D6-11D1-ADE2-0000F87734F0),
        helpstring("UserInfo Class")
    ]
    coclass UserInfo
    {
        [default] interface IUserInfo;
    };
    
    [ 
        uuid(166A20C0-AE10-11D1-ADEB-0000F87734F0),
        helpstring("Event interface for WebGate")
    ]
    dispinterface _WebGateEvents
    {
        properties:
        methods:
        [id(1)] void WebGateDownloadComplete([in] long lProgress );
    };

    [
        uuid(3724B9A1-9503-11D1-B86A-00A0C90DC849),
        helpstring("WebGate Class")
    ]
    coclass WebGate
    {
        [default] interface IWebGate;
        [default, source] dispinterface _WebGateEvents;
    };
    [ 
        uuid(1F6D88A2-98D2-11d1-ADE3-0000F87734F0),
        helpstring("Event interface for INSHandler")
    ]
    dispinterface _INSHandlerEvents
    {
        properties:
        methods:
        [id(1)] void RunningCustomExecutable();
        [id(2)] void KillConnection();
    };


    [
        uuid(6342E1B6-94DB-11D1-ADE2-0000F87734F0),
        helpstring("INSHandler Class")
    ]
    coclass INSHandler
    {
        [default] interface IINSHandler;
        [default, source] dispinterface _INSHandlerEvents;
    };
};
