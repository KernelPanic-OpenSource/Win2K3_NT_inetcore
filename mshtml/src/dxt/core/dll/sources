!IF 0

Copyright (c) 1999  Microsoft Corporation

!ENDIF

# Need to wait until all other directories are done before building this one so all the
# LIB's we built are around.
#
SYNCHRONIZE_DRAIN=1

SUBPROJROOT=$(MAKEDIR:\dll=)

!include $(SUBPROJROOT)\core.inc

TARGETNAME      = dxtrans
TARGETPATH      = ..\..\..\..\$(_OBJ_DIR)
TARGETTYPE      = DYNLINK

PASS1_PUBLISH={..\..\..\..\$(O)\dxtrans.lib=$(SDK_LIB_PATH)\dxtrans.lib}

DLLDEF          = dxtrans.def
DLLBASE         = 0x35c50000
DLLENTRY        = $(TRIRTMAIN)

SOURCES =       \
    dxtrans.cpp \
    stdafx.cpp


# We need to use LINKLIBS here for these two libs because we will be
# exporting some of the code that builds from them, so we need to guarantee
# that they're in place at the appropriate build step.

LINKLIBS =                                      \
    $(SUBPROJROOT)\src\$(O)\dxtsrc.lib          \
    $(SUBPROJROOT)\mscanner\$(O)\mscanner.lib   \

CRTLIBS = \
    $(ROOT)\src\f3\trirt\$(O)\trirt.lib         \


!ifdef USE_DEBUGLIB
DXT_DEBUGLIB = $(ROOT)\src\core\debuglib\$(O)\debuglib.lib
!else
DXT_DEBUGLIB =
!endif

TARGETLIBS =                                    \
    $(ROOT)\src\core\include\$(O)\corepch.lib   \
    $(ROOT)\src\core\cdutil\$(O)\memutils.obj   \
    $(ROOT)\src\core\cdutil\$(O)\vmem.obj       \
    $(DXT_DEBUGLIB)                             \
    $(SUBPROJROOT)\rsrc\$(O)\dxtrans.res        \
    $(SDK_LIB_PATH)\kernel32.lib                \
    $(DXTROOT)\uuid\$(O)\dxtuuid.lib             \
    $(SDK_LIB_PATH)\ole32.lib                   \
    $(SDK_LIB_PATH)\oleaut32.lib                \
    $(SDK_LIB_PATH)\user32.lib                  \
    $(SDK_LIB_PATH)\advapi32.lib                \
    $(SDK_LIB_PATH)\gdi32.lib                   \
    $(SDK_LIB_PATH)\uuid.lib                    \
    $(SDK_LIB_PATH)\shlwapi.lib                 \
    $(SHELL_LIB_PATH)\shlwapip.lib              \
    $(SDK_LIB_PATH)\winmm.lib                   \
