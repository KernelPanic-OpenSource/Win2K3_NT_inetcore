//+-----------------------------------------------------------------------
//
//  Microsoft
//  Copyright (C) Microsoft Corporation, 1999
//
//  File:      src\time\idl\walker.idl
//
//  Contents:  interface definitions for walker.dll
//
//------------------------------------------------------------------------

// This file will be processed by the MIDL tool to
// produce the type library (walker.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
#include "olectl.h"

	[
		object,
		uuid(14887E6E-DE4B-11D2-8FF9-00C04F8EC9A1),
		dual,
		helpstring("IGraphWalker Interface"),
		pointer_default(unique)
	]
	interface IGraphWalker : IDispatch
	{
	};

	[
		object,
		uuid(14887E6E-DE4B-11D2-8FF9-00C04F8EC9A2),
		dual,
		helpstring("IEmptyInterface"),
		pointer_default(unique)
	]
	interface IElementBehaviorSiteImpl : IUnknown
	{
        HRESULT Draw(HDC hdc, LONG dwLayer, LPRECT prc, IUnknown * pParams);
	};
	

	[
		object,
		uuid(10AF28CE-0961-11D3-901F-00C04F8EC9A1),
		dual,
		helpstring("IVideoHost Interface"),
		pointer_default(unique)
	]
	interface IVideoHost : IDispatch
	{
        HRESULT Resize(const RECT *prcPos);

        HRESULT Redraw(RECT *, IElementBehaviorSiteImpl *);
	};

	[
		object,
		uuid(C7AEBC6E-1916-11D3-9027-00C04F8EC9A1),
		dual,
		helpstring("IEventGenerator Interface"),
		pointer_default(unique)
	]
	interface IEventGenerator : IDispatch
	{
		[id(1), helpstring("method onbegin")] HRESULT onbegin();
		[id(2), helpstring("method onpause")] HRESULT onpause();
		[id(3), helpstring("method onresume")] HRESULT onresume();
		[id(4), helpstring("method onend")] HRESULT onend();
		[id(5), helpstring("method onresync")] HRESULT onresync();
		[id(6), helpstring("method onrepeat")] HRESULT onrepeat();
		[id(7), helpstring("method onreverse")] HRESULT onreverse();
		[id(8), helpstring("method onmediacomplete")] HRESULT onmediacomplete();
		[id(9), helpstring("method onmediaslip")] HRESULT onmediaslip();
		[id(10), helpstring("method onmedialoadfailed")] HRESULT onmedialoadfailed();
		[id(11), helpstring("method onscriptcommand")] HRESULT onscriptcommand();
	};


[
	uuid(C52D2681-DE31-11D2-9CEA-00C04F8EC9A1),
	version(1.0),
	helpstring("walker 1.0 Type Library")
]
library WALKERLib
{
	importlib("stdole2.tlb");
	
	[
		uuid(22F59900-DE4B-11D2-8FF9-00C04F8EC9A1),
		helpstring("GraphWalker Class")
	]
	coclass GraphWalker
	{
		[default] interface IGraphWalker;
	};
    [
		uuid(1C83134A-0961-11D3-901F-00C04F8EC9A1),
		helpstring("VideoHost Class")
	]

	coclass VideoHost
	{
		[default] interface IVideoHost;
	};
	[
		uuid(DE5775C9-1916-11D3-9027-00C04F8EC9A1),
		helpstring("_IEventGeneratorEvents Interface")
	]
	dispinterface _IEventGeneratorEvents
	{
		properties:
		methods:
		[id(1), helpstring("method onbegin")] HRESULT onbegin();
		[id(2), helpstring("method onpause")] HRESULT onpause();
		[id(3), helpstring("method onresume")] HRESULT onresume();
		[id(4), helpstring("method onend")] HRESULT onend();
		[id(5), helpstring("method onresync")] HRESULT onresync();
		[id(6), helpstring("method onrepeat")] HRESULT onrepeat();
		[id(7), helpstring("method onreverse")] HRESULT onreverse();
		[id(8), helpstring("method onmediacomplete")] HRESULT onmediacomplete();
		[id(9), helpstring("method onmediaslip")] HRESULT onmediaslip();
		[id(10), helpstring("method onmedialoadfailed")] HRESULT onmedialoadfailed();
		[id(11), helpstring("method onscriptcommand")] HRESULT onscriptcommand();
	};

	[
		uuid(DE5775C8-1916-11D3-9027-00C04F8EC9A1),
		helpstring("EventGenerator Class")
	]
	coclass EventGenerator
	{
		[default] interface IEventGenerator;
		[default, source] dispinterface _IEventGeneratorEvents;
	};
};
