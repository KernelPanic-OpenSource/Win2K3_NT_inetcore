#ifndef _MSHTMEXT_PDL_
#define _MSHTMEXT_PDL_ 1

#include "element.pdl"

file mshtmext.pdl

import element.pdl
import document.pdl

interface IElementBehaviorSite
interface ICSSFilterSite
interface IMarkupPointer
interface IMarkupContainer
interface IMarkupContainer2
interface IHTMLChangeLog
interface IHTMLChangeSink
interface IHTMLDocument2
interface IActiveIMMApp
interface ISegmentList
interface ISegmentListIterator
interface IHTMLCaret
interface ISegment
interface IElementSegment
interface IHighlightSegment
interface IHighlightRenderingServices
interface ILineInfo
interface IDisplayPointer
interface IDisplayServices
interface IHtmlDlgSafeHelper
interface IBlockFormats
interface IFontNames

enum ELEMENT_CORNER prefix:ELEMENT_CORNER_
    eval NONE
    eval TOP
    eval LEFT 
    eval BOTTOM 
    eval RIGHT 
    eval TOPLEFT   
    eval TOPRIGHT
    eval BOTTOMLEFT  
    eval BOTTOMRIGHT    
    
//-------------------------------------------------------------------------
//
//  ICSSFilterSite, ICSSFilter
//
//-------------------------------------------------------------------------

interface ICSSFilterSite super:IUnknown custom guid:3050f3ed-98b5-11cf-bb82-00aa00bdce0b
    method      HRESULT GetElement              (out retval type:IHTMLElement** arg:Element)
    method      HRESULT FireOnFilterChangeEvent ()


interface ICSSFilter super:IUnknown custom guid:3050f3ec-98b5-11cf-bb82-00aa00bdce0b
    method      HRESULT SetSite                 (in type:ICSSFilterSite* arg:pSink)
    method      HRESULT OnAmbientPropertyChange (in type:LONG arg:dispid)


//+------------------------------------------------------------------------
//
//  ISecureUrlHost
//
//-------------------------------------------------------------------------

interface ISecureUrlHost super:IUnknown custom guid:c81984c4-74c8-11d2-baa9-00c04fc2040e
    method      HRESULT ValidateSecureUrl (out type:BOOL* arg:pfAllow,\
                                           in type:OLECHAR* arg:pchUrlInQuestion,\
                                           in type:DWORD arg:dwFlags)
                                            
enum SECUREURLHOSTVALIDATE_FLAGS  prefix:SUHV_ guid:d1de878e-74c8-11d2-baa9-00c04fc2040e 
    eval PROMPTBEFORENO        value:0x00000001
    eval SILENTYES             value:0x00000002
    eval UNSECURESOURCE        value:0x00000004
    
                                            

//-------------------------------------------------------------------------
//
//  Markup services
//
//-------------------------------------------------------------------------

enum POINTER_GRAVITY    prefix:POINTER_GRAVITY_ guid:3050f5af-98b5-11cf-bb82-00aa00bdce0b
    eval Left   value:0       
    eval Right  value:1       

enum ELEMENT_ADJACENCY  prefix:ELEM_ADJ_    guid:3050f5b0-98b5-11cf-bb82-00aa00bdce0b
    eval BeforeBegin   value:0
    eval AfterBegin    value:1
    eval BeforeEnd     value:2
    eval AfterEnd      value:3

enum MARKUP_CONTEXT_TYPE prefix:CONTEXT_TYPE_   guid:3050f5b1-98b5-11cf-bb82-00aa00bdce0b
    eval None          value:0
    eval Text          value:1
    eval EnterScope    value:2
    eval ExitScope     value:3
    eval NoScope       value:4

// must agree with FR_xxx (commdlg.h)
enum FINDTEXT_FLAGS  prefix:FINDTEXT_ guid:3050f5b2-98b5-11cf-bb82-00aa00bdce0b 
    eval BACKWARDS         value:0x00000001
    eval WHOLEWORD         value:0x00000002
    eval MATCHCASE         value:0x00000004
    eval RAW               value:0x00020000
    eval MATCHDIAC         value:0x20000000
    eval MATCHKASHIDA      value:0x40000000
    eval MATCHALEFHAMZA    value:0x80000000

enum MOVEUNIT_ACTION  prefix:MOVEUNIT_  guid:3050f5b3-98b5-11cf-bb82-00aa00bdce0b
    eval PREVCHAR       
    eval NEXTCHAR       
    eval PREVCLUSTERBEGIN
    eval NEXTCLUSTERBEGIN
    eval PREVCLUSTEREND
    eval NEXTCLUSTEREND
    eval PREVWORDBEGIN  
    eval NEXTWORDBEGIN  
    eval PREVWORDEND    
    eval NEXTWORDEND    
    eval PREVPROOFWORD  
    eval NEXTPROOFWORD  
    eval NEXTURLBEGIN
    eval PREVURLBEGIN
    eval NEXTURLEND
    eval PREVURLEND
    eval PREVSENTENCE   
    eval NEXTSENTENCE   
    eval PREVBLOCK      
    eval NEXTBLOCK      


enum PARSE_FLAGS prefix:PARSE_ guid:3050f5b4-98b5-11cf-bb82-00aa00bdce0b
    eval ABSOLUTIFYIE40URLS value:0x00000001  

enum ELEMENT_TAG_ID prefix:TAGID_ guid:3050f5b5-98b5-11cf-bb82-00aa00bdce0b
    //
    // TAGID_NULL is the non-ID
    //
    eval NULL           value:0
    eval UNKNOWN 
    eval A
    eval ACRONYM
    eval ADDRESS
    eval APPLET
    eval AREA
    eval B
    eval BASE
    eval BASEFONT
    eval BDO
    eval BGSOUND
    eval BIG
    eval BLINK
    eval BLOCKQUOTE
    eval BODY
    eval BR
    eval BUTTON
    eval CAPTION
    eval CENTER
    eval CITE 
    eval CODE
    eval COL
    eval COLGROUP
    eval COMMENT
    eval COMMENT_RAW
    eval DD 
    eval DEL
    eval DFN 
    eval DIR 
    eval DIV
    eval DL 
    eval DT 
    eval EM
    eval EMBED 
    eval FIELDSET
    eval FONT 
    eval FORM 
    eval FRAME
    eval FRAMESET
    eval GENERIC
    eval H1 
    eval H2
    eval H3 
    eval H4 
    eval H5 
    eval H6
    eval HEAD
    eval HR
    eval HTML
    eval I
    eval IFRAME
    eval IMG
    eval INPUT
    eval INS
    eval KBD
    eval LABEL
    eval LEGEND
    eval LI
    eval LINK
    eval LISTING
    eval MAP
    eval MARQUEE
    eval MENU
    eval META 
    eval NEXTID
    eval NOBR
    eval NOEMBED
    eval NOFRAMES
    eval NOSCRIPT
    eval OBJECT
    eval OL
    eval OPTION
    eval P
    eval PARAM
    eval PLAINTEXT
    eval PRE
    eval Q
    eval RP
    eval RT
    eval RUBY
    eval S
    eval SAMP
    eval SCRIPT
    eval SELECT
    eval SMALL
    eval SPAN 
    eval STRIKE
    eval STRONG 
    eval STYLE 
    eval SUB
    eval SUP 
    eval TABLE
    eval TBODY 
    eval TC
    eval TD
    eval TEXTAREA
    eval TFOOT
    eval TH
    eval THEAD 
    eval TITLE
    eval TR 
    eval TT
    eval U 
    eval UL 
    eval VAR 
    eval WBR 
    eval XMP
    eval ROOT
    eval OPTGROUP

    // These should be at the end of the list!  This acts as the total number
    // of TAG_IDs.
    eval COUNT
    eval LAST_PREDEFINED  value:10000

    // For SegmentLists
    enum SELECTION_TYPE prefix:SELECTION_TYPE_
    eval None
    eval Caret
    eval Text
    eval Control

    // For SaveSegmentsToClipboard
    enum SAVE_SEGMENTS_FLAGS prefix:SAVE_SEGMENTS_
    eval NoIE4SelectionCompat value:0x0001

//-------------------------------------------------------------------------
//
//  IMarkupServices, IMarkupContainer, IMarkupPointer
//
//-------------------------------------------------------------------------

interface IMarkupServices super:IUnknown custom guid:3050f4a0-98b5-11cf-bb82-00aa00bdce0b

    method      HRESULT CreateMarkupPointer     (out type:IMarkupPointer** arg:ppPointer)
    method      HRESULT CreateMarkupContainer   (out type:IMarkupContainer** arg:ppMarkupContainer)
    method      HRESULT CreateElement           (in type:ELEMENT_TAG_ID arg:tagID, \
                                                 in type:OLECHAR* arg:pchAttributes, \
                                                 out type:IHTMLElement** arg:ppElement)
    method      HRESULT CloneElement            (in type:IHTMLElement* arg:pElemCloneThis, \
                                                 out type:IHTMLElement** arg:ppElementTheClone)
    method      HRESULT InsertElement           (in type:IHTMLElement* arg:pElementInsert, \
                                                 in type:IMarkupPointer* arg:pPointerStart, \
                                                 in type:IMarkupPointer* arg:pPointerFinish)
    method      HRESULT RemoveElement           (in type:IHTMLElement* arg:pElementRemove)
    method      HRESULT Remove                  (in type:IMarkupPointer* arg:pPointerStart, \
                                                 in type:IMarkupPointer* arg:pPointerFinish)
    method      HRESULT Copy                    (in type:IMarkupPointer* arg:pPointerSourceStart, \
                                                 in type:IMarkupPointer* arg:pPointerSourceFinish, \
                                                 in type:IMarkupPointer* arg:pPointerTarget)
    method      HRESULT Move                    (in type:IMarkupPointer* arg:pPointerSourceStart, \
                                                 in type:IMarkupPointer* arg:pPointerSourceFinish, \
                                                 in type:IMarkupPointer* arg:pPointerTarget)
    method      HRESULT InsertText              (in type:OLECHAR* arg:pchText, \
                                                 in type:long arg:cch \
                                                 in type:IMarkupPointer* arg:pPointerTarget)
    method      HRESULT ParseString             (in type:OLECHAR* arg:pchHTML, \
                                                 in type:DWORD arg:dwFlags, \
                                                 out type:IMarkupContainer** arg:ppContainerResult, \
                                                 in type:IMarkupPointer* arg:ppPointerStart, \
                                                 in type:IMarkupPointer* arg:ppPointerFinish)
    method      HRESULT ParseGlobal             (in type:HGLOBAL arg:hglobalHTML, \
                                                 in type:DWORD arg:dwFlags, \
                                                 out type:IMarkupContainer** arg:ppContainerResult, \
                                                 in type:IMarkupPointer* arg:pPointerStart, \
                                                 in type:IMarkupPointer* arg:pPointerFinish)
    method      HRESULT IsScopedElement         (in type:IHTMLElement* arg:pElement, \
                                                 out type:BOOL* arg:pfScoped)
    method      HRESULT GetElementTagId         (in type:IHTMLElement* arg:pElement, \
                                                 out type:ELEMENT_TAG_ID* arg:ptagId)
    method      HRESULT GetTagIDForName maxstrlen:pdlNoLimit (in type:BSTR arg:bstrName, \
                                                 out type:ELEMENT_TAG_ID* arg:ptagId)
    method      HRESULT GetNameForTagID         (in type:ELEMENT_TAG_ID arg:tagId, \
                                                 out type:BSTR* arg:pbstrName)
    method      HRESULT MovePointersToRange     (in type:IHTMLTxtRange* arg:pIRange, \
                                                 in type:IMarkupPointer* arg:pPointerStart, \
                                                 in type:IMarkupPointer* arg:pPointerFinish)
    method      HRESULT MoveRangeToPointers     (in type:IMarkupPointer* arg:pPointerStart, \
                                                 in type:IMarkupPointer* arg:pPointerFinish, \
                                                 in type:IHTMLTxtRange* arg:pIRange)
    method      HRESULT BeginUndoUnit           (in type:OLECHAR* arg:pchTitle)
    method      HRESULT EndUndoUnit             ()
    
interface IMarkupServices2 super:IMarkupServices custom guid:3050f682-98b5-11cf-bb82-00aa00bdce0b
    method      HRESULT ParseGlobalEx           (in type:HGLOBAL arg:hglobalHTML, \
                                                 in type:DWORD arg:dwFlags, \
                                                 in type:IMarkupContainer* arg:pContext, \
                                                 out type:IMarkupContainer** arg:ppContainerResult, \
                                                 in type:IMarkupPointer* arg:pPointerStart, \
                                                 in type:IMarkupPointer* arg:pPointerFinish)
    method      HRESULT ValidateElements        (in type:IMarkupPointer* arg:pPointerStart, \
                                                 in type:IMarkupPointer* arg:pPointerFinish, \
                                                 in type:IMarkupPointer* arg:pPointerTarget, \
                                                 in out type:IMarkupPointer* arg:pPointerStatus, \
                                                 out type:IHTMLElement** arg:ppElemFailBottom, \
                                                 out type:IHTMLElement** arg:ppElemFailTop)
#ifndef UNIX                                              
    method      HRESULT SaveSegmentsToClipboard (in type:ISegmentList* arg:pSegmentList, \
                                                 in type:DWORD arg:dwFlags )
#else
    method      HRESULT SaveSegmentsToClipboard (in type:ISegmentList* arg:pSegmentList, \
                                                 in type:DWORD arg:dwFlags, \
                                                 out type:VARIANTARG* arg:pvarantarg )
#endif
                                                 
interface IMarkupContainer super:IUnknown custom guid:3050f5f9-98b5-11cf-bb82-00aa00bdce0b
    method      HRESULT OwningDoc               (out type:IHTMLDocument2** arg:ppDoc)

interface IMarkupContainer2 super:IMarkupContainer custom guid:3050f648-98b5-11cf-bb82-00aa00bdce0b
    method      HRESULT CreateChangeLog         (in type:IHTMLChangeSink* arg:pChangeSink, \
                                                 out type:IHTMLChangeLog** arg:ppChangeLog, \
                                                 in type:BOOL arg:fForward, \
                                                 in type:BOOL arg:fBackward)
#if 0
    method      HRESULT GetRootElement          (out type:IHTMLElement** arg:ppElement)
#endif // 0
    method      HRESULT RegisterForDirtyRange   (in type:IHTMLChangeSink* arg:pChangeSink, \
                                                 out type:DWORD* arg:pdwCookie)
    method      HRESULT UnRegisterForDirtyRange (in type:DWORD arg:dwCookie)
    method      HRESULT GetAndClearDirtyRange   (in type:DWORD arg:dwCookie, \
                                                 in type:IMarkupPointer* arg:pIPointerBegin, \
                                                 in type:IMarkupPointer* arg:pIPointerEnd)
    method      long    GetVersionNumber        ()
    method      HRESULT GetMasterElement        (out type:IHTMLElement** arg:ppElementMaster)

interface IHTMLChangePlayback super:IUnknown custom guid:3050f6e0-98b5-11cf-bb82-00aa00bdce0b
    method      HRESULT ExecChange              (in type:BYTE* arg:pbRecord, \
                                                 in type:BOOL arg:fForward)

interface IMarkupPointer super:IUnknown custom guid:3050f49f-98b5-11cf-bb82-00aa00bdce0b
    method      HRESULT OwningDoc               (out type:IHTMLDocument2** arg:ppDoc)
    method      HRESULT Gravity                 (out type:POINTER_GRAVITY* arg:pGravity)
    method      HRESULT SetGravity              (in type:POINTER_GRAVITY arg:Gravity)
    method      HRESULT Cling                   (out type:BOOL* arg:pfCling)
    method      HRESULT SetCling                (in type:BOOL arg:fCLing)
    method      HRESULT Unposition              ()
    method      HRESULT IsPositioned            (out type:BOOL* arg:pfPositioned)
    method      HRESULT GetContainer            (out type:IMarkupContainer** arg:ppContainer)
    method      HRESULT MoveAdjacentToElement   (in type:IHTMLElement* arg:pElement, \
                                                 in type:ELEMENT_ADJACENCY arg:eAdj)
    method      HRESULT MoveToPointer           (in type:IMarkupPointer* arg:pPointer)
    method      HRESULT MoveToContainer         (in type:IMarkupContainer* arg:pContainer, \
                                                 in type:BOOL arg:fAtStart)
    method      HRESULT Left                    (in type:BOOL arg:fMove, \
                                                 out type:MARKUP_CONTEXT_TYPE* arg:pContext, \
                                                 out type:IHTMLElement** arg:ppElement, \
                                                 in out type:long* arg:pcch, \
                                                 out type:OLECHAR* arg:pchText)
    method      HRESULT Right                   (in type:BOOL arg:fMove, \
                                                 out type:MARKUP_CONTEXT_TYPE* arg:pContext, \
                                                 out type:IHTMLElement** arg:ppElement, \
                                                 in out type:long* arg:pcch, \
                                                 out type:OLECHAR* arg:pchText)
    method      HRESULT CurrentScope            (out type:IHTMLElement** arg:ppElemCurrent)
    method      HRESULT IsLeftOf                (in type:IMarkupPointer* arg:pPointerThat, \
                                                 out type:BOOL* arg:pfResult)
    method      HRESULT IsLeftOfOrEqualTo       (in type:IMarkupPointer* arg:pPointerThat, \
                                                 out type:BOOL* arg:pfResult)
    method      HRESULT IsRightOf               (in type:IMarkupPointer* arg:pPointerThat, \
                                                 out type:BOOL* arg:pfResult)
    method      HRESULT IsRightOfOrEqualTo      (in type:IMarkupPointer* arg:pPointerThat, \
                                                 out type:BOOL* arg:pfResult)
    method      HRESULT IsEqualTo               (in type:IMarkupPointer* arg:pPointerThat, \
                                                 out type:BOOL* arg:pfAreEqual)
    method      HRESULT MoveUnit                (in type:MOVEUNIT_ACTION arg:muAction)
    method      HRESULT FindText                (in type:OLECHAR* arg:pchFindText, \
                                                 in type:DWORD arg:dwFlags, \
                                                 in type:IMarkupPointer* arg:pIEndMatch, \
                                                 in type:IMarkupPointer* arg:pIEndSearch)

interface IMarkupPointer2 super:IMarkupPointer custom guid:3050f675-98b5-11cf-bb82-00aa00bdce0b
    method      HRESULT IsAtWordBreak           (out type:BOOL* arg:pfAtBreak)
    method      HRESULT GetMarkupPosition       (out type:long* arg:plMP)
    method      HRESULT MoveToMarkupPosition    (in  type:IMarkupContainer* arg:pContainer, \
                                                 in  type:long  arg:lMP)
    method      HRESULT MoveUnitBounded         (in  type:MOVEUNIT_ACTION arg:muAction, \
                                                 in  type:IMarkupPointer* arg:pIBoundary)
    method      HRESULT IsInsideURL             (in  type:IMarkupPointer* arg:pRight, \
                                                 out type:BOOL* arg:pfResult)
    method      HRESULT MoveToContent           (in  type:IHTMLElement* arg:pIElement, \
                                                 in type:BOOL arg:fAtStart)

interface IMarkupTextFrags super:IUnknown custom guid:3050f5fa-98b5-11cf-bb82-00aa00bdce0b
    method      HRESULT GetTextFragCount        (out type:long* arg:pcFrags)
    method      HRESULT GetTextFrag             (in type:long arg:iFrag, \
                                                 out type:BSTR* arg:pbstrFrag, \
                                                 in type:IMarkupPointer* arg:pPointerFrag)
    method      HRESULT RemoveTextFrag          (in type:long arg:iFrag)
    method      HRESULT InsertTextFrag          (in type:long arg:iFrag, \
                                                 in type:BSTR arg:bstrInsert, \
                                                 in type:IMarkupPointer* arg:pPointerInsert)
    method      HRESULT FindTextFragFromMarkupPointer \
                                                (in type:IMarkupPointer* arg:pPointerFind, \
                                                 out type:long* arg:piFrag, \
                                                 out type:BOOL* arg:pfFragFound)

interface IHTMLChangeLog super:IUnknown custom guid:3050f649-98b5-11cf-bb82-00aa00bdce0b
    method      HRESULT GetNextChange           (in type:BYTE* arg:pbBuffer, \
                                                 in type:long arg:nBufferSize, \
                                                 out type:long* arg:pnRecordLength)

interface IHTMLChangeSink super:IUnknown custom guid:3050f64a-98b5-11cf-bb82-00aa00bdce0b
    method      HRESULT Notify                  ()


//-------------------------------------------------------------------------
//
//  XML Generic Parse interface, allows unqualified tags to be interpreted as 
//  generic tags for the XML MimeViewer
//
//-------------------------------------------------------------------------

interface IXMLGenericParse super:IUnknown custom guid:E4E23071-4D07-11d2-AE76-0080C73BC199
    method      HRESULT SetGenericParse         (in type:VARIANT_BOOL arg:fDoGeneric)


interface IHTMLEditHost super:IUnknown custom guid:3050f6a0-98b5-11cf-bb82-00aa00bdce0b
    method      HRESULT SnapRect                (in type:IHTMLElement*  arg:pIElement, \
                                                 in out type:RECT*      arg:prcNew,    \
                                                 in type:ELEMENT_CORNER arg:eHandle)

interface IHTMLEditHost2 super:IHTMLEditHost custom guid:3050f848-98b5-11cf-bb82-00aa00bdce0d 
    method      HRESULT PreDrag                 ()

interface ISegment super:IUnknown custom guid:3050f683-98b5-11cf-bb82-00aa00bdce0b
    method      HRESULT GetPointers             (in type:IMarkupPointer* arg:pIStart, \
                                                 in type:IMarkupPointer* arg:pIEnd )

interface ISegmentListIterator super:IUnknown custom guid:3050f692-98b5-11cf-bb82-00aa00bdce0b
    method      HRESULT Current                 (out type:ISegment** arg:ppISegment)
    method      HRESULT First                   ()
    method      HRESULT IsDone                  ()
    method      HRESULT Advance                 ()

interface ISegmentList super:IUnknown custom guid:3050f605-98b5-11cf-bb82-00aa00bdce0b
    method      HRESULT CreateIterator          (out type:ISegmentListIterator** arg:ppIIter)
    method      HRESULT GetType                 (out type:SELECTION_TYPE* arg:peType)
    method      HRESULT IsEmpty                 (out type:BOOL* arg:pfEmpty)

interface ISequenceNumber super:IUnknown custom guid:3050f6c1-98b5-11cf-bb82-00aa00bdce0b
    method      HRESULT GetSequenceNumber       (in type:long arg:nCurrent,\
                                                 out type:long* arg:pnNew)

interface IIMEServices super:IUnknown custom guid:3050f6ca-98b5-11cf-bb82-00aa00bdce0b
    method      HRESULT GetActiveIMM            (out type:IActiveIMMApp** arg:ppActiveIMM)

enum CARET_DIRECTION prefix:CARET_DIRECTION_
    eval INDETERMINATE
    eval SAME
    eval BACKWARD
    eval FORWARD
    
interface IHTMLCaret super:IUnknown custom guid:3050f604-98b5-11cf-bb82-00aa00bdce0b
    method      HRESULT MoveCaretToPointer      (in type:IDisplayPointer* arg:pDispPointer, \
                                                 in type:BOOL arg:fScrollIntoView, \
                                                 in type:CARET_DIRECTION arg:eDir)
    method      HRESULT MoveCaretToPointerEx    (in type:IDisplayPointer* arg:pDispPointer, \
                                                 in type:BOOL arg:fVisible, \
                                                 in type:BOOL arg:fScrollIntoView, \
                                                 in type:CARET_DIRECTION arg:eDir)
    method      HRESULT MoveMarkupPointerToCaret (in type:IMarkupPointer* arg:pIMarkupPointer)
    method      HRESULT MoveDisplayPointerToCaret (in type:IDisplayPointer* arg:pDispPointer)
    method      HRESULT IsVisible               (out type:BOOL* arg:pIsVisible)
    method      HRESULT Show                    (in type:BOOL arg:fScrollIntoView)
    method      HRESULT Hide                    ()
    method      HRESULT InsertText              (in type:OLECHAR* arg:pText, \
                                                 in type:LONG arg:lLen)
    method      HRESULT ScrollIntoView          ()
    method      HRESULT GetLocation             (out type:POINT* arg:pPoint, \
                                                 in type:BOOL arg:fTranslate)
	method		HRESULT GetCaretDirection		(out type:CARET_DIRECTION* arg:peDir)
	method		HRESULT	SetCaretDirection		(in  type:CARET_DIRECTION arg:eDir)

interface IHighlightRenderingServices super:IUnknown custom guid:3050f606-98b5-11cf-bb82-00aa00bdce0b
    method      HRESULT AddSegment              (in type:IDisplayPointer* arg:pDispPointerStart, \
                                                 in type:IDisplayPointer* arg:pDispPointerEnd, \
                                                 in type:IHTMLRenderStyle* arg:pIRenderStyle \
                                                 out type:IHighlightSegment** arg:ppISegment)
    method      HRESULT MoveSegmentToPointers   (in type:IHighlightSegment* arg:pISegment, \
                                                 in type:IDisplayPointer* arg:pDispPointerStart, \
                                                 in type:IDisplayPointer* arg:pDispPointerEnd)
    method      HRESULT RemoveSegment           (in type:IHighlightSegment* arg:pISegment)

interface ISelectionServicesListener super:IUnknown custom guid:3050f699-98b5-11cf-bb82-00aa00bdce0b
    method      HRESULT BeginSelectionUndo        ()
    method      HRESULT EndSelectionUndo          ()
    method      HRESULT OnSelectedElementExit     (in type:IMarkupPointer* arg:pIElementStart, \
                                                   in type:IMarkupPointer* arg:pIElementEnd , \
                                                   in type:IMarkupPointer* arg:pIElementContentStart, \
                                                   in type:IMarkupPointer* arg:pIElementContentEnd )
                                                   
    method      HRESULT OnChangeType              (in type:SELECTION_TYPE arg:eType, \
                                                   in type:ISelectionServicesListener* arg:pIListener )
    method      HRESULT GetTypeDetail             (out type:BSTR* arg:pTypeDetail)
    
interface ISelectionServices super:IUnknown custom guid:3050f684-98b5-11cf-bb82-00aa00bdce0b
    method      HRESULT SetSelectionType        (in type:SELECTION_TYPE arg:eType, \
                                                 in type:ISelectionServicesListener* arg:pIListener)

    method      HRESULT GetMarkupContainer      (out type:IMarkupContainer** arg:ppIContainer)                                                 

    method      HRESULT AddSegment              (in type:IMarkupPointer* arg:pIStart, \
                                                 in type:IMarkupPointer* arg:pIEnd, \
                                                 out type:ISegment** arg:ppISegmentAdded )
                                                 
    method      HRESULT AddElementSegment       (in type:IHTMLElement* arg:pIElement, \
                                                 out type:IElementSegment** arg:ppISegmentAdded )

    method      HRESULT RemoveSegment           (in type:ISegment* arg:pISegment)

    method      HRESULT GetSelectionServicesListener (out type:ISelectionServicesListener** arg:ppISelectionServicesListener)
    
interface IElementSegment super:ISegment custom guid:3050f68f-98b5-11cf-bb82-00aa00bdce0b
    method      HRESULT GetElement              (out type:IHTMLElement** arg:ppIElement)
    method      HRESULT SetPrimary              (in type:BOOL arg:fPrimary)
    method      HRESULT IsPrimary               (out type:BOOL* arg:pfPrimary)
    
interface IHighlightSegment super:ISegment custom guid:3050f690-98b5-11cf-bb82-00aa00bdce0b  

    
//-------------------------------------------------------------------------
//
// IHTMLEditDesigner - Used to extend functionality of Trident editor. All the registered
//    IHTMLEditDesigners receive commands forwarded from the editor. For example,
//    see src\designer\htmspell.hxx.
//
//-------------------------------------------------------------------------

interface IHTMLEditDesigner super:IUnknown custom guid:3050f662-98b5-11cf-bb82-00aa00bdce0b
    method      HRESULT PreHandleEvent          (in type:DISPID arg:inEvtDispId, \
                                                 in type:IHTMLEventObj* arg:pIEventObj )

    method      HRESULT PostHandleEvent          (in type:DISPID arg:inEvtDispId, \
                                                  in type:IHTMLEventObj* arg:pIEventObj )

    method      HRESULT TranslateAccelerator     (in type:DISPID arg:inEvtDispId, \
                                                  in type:IHTMLEventObj* arg:pIEventObj )
                                                  
    method      HRESULT PostEditorEventNotify    (in type:DISPID arg:inEvtDispId, \
                                                  in type:IHTMLEventObj* arg:pIEventObj )

//-------------------------------------------------------------------------
//
// IHTMLEditServices - Implemented by Trident Editor to extend its functionality
// with designers.
//-------------------------------------------------------------------------

interface IHTMLEditServices super:IUnknown custom guid:3050f663-98b5-11cf-bb82-00aa00bdce0b
    method HRESULT AddDesigner (in type:IHTMLEditDesigner* arg:pIDesigner)
    method HRESULT RemoveDesigner (in type:IHTMLEditDesigner* arg:pIDesigner)
    method HRESULT GetSelectionServices    (in type:IMarkupContainer* arg:pIContainer, \
                                            out type:ISelectionServices** arg:ppSelSvc)
    method HRESULT MoveToSelectionAnchor   (in type:IMarkupPointer* arg:pIStartAnchor )
    method HRESULT MoveToSelectionEnd      (in type:IMarkupPointer* arg:pIEndAnchor )
    method HRESULT SelectRange             (in type:IMarkupPointer* arg:pStart, \
                                            in type:IMarkupPointer* arg:pEnd,   \
                                            in type:SELECTION_TYPE  arg:eType )

//-------------------------------------------------------------------------
//
// IHTMLEditServices2 - Implemented by Trident Editor to extend its functionality
// with designers.
//-------------------------------------------------------------------------

interface IHTMLEditServices2 super:IHTMLEditServices custom guid:3050f812-98b5-11cf-bb82-00aa00bdce0b
    method HRESULT MoveToSelectionAnchorEx (in type:IDisplayPointer* arg:pIStartAnchor )
    method HRESULT MoveToSelectionEndEx    (in type:IDisplayPointer* arg:pIEndAnchor )
    method HRESULT FreezeVirtualCaretPos (in   type:BOOL  arg:fReCompute)
    method HRESULT UnFreezeVirtualCaretPos  (in  type:BOOL  arg:fReset)
    
    
//-------------------------------------------------------------------------
//
//  ILineInfo
//
//-------------------------------------------------------------------------

enum LINE_DIRECTION prefix:LINE_DIRECTION_
    eval RightToLeft value:1
    eval LeftToRight value:2

interface ILineInfo super:IUnknown custom guid:3050f7e2-98b5-11cf-bb82-00aa00bdce0b
    property x             atype:long get abstract dispid:DISPID_ILINEINFO+1
    property baseLine      atype:long get abstract dispid:DISPID_ILINEINFO+2
    property textDescent   atype:long get abstract dispid:DISPID_ILINEINFO+3
    property textHeight    atype:long get abstract dispid:DISPID_ILINEINFO+4
    property lineDirection atype:LONG get abstract dispid:DISPID_ILINEINFO+5
    
interface IHTMLComputedStyle super:IUnknown custom guid:3050f6c3-98b5-11cf-bb82-00aa00bdce0b
    property bold               atype:VARIANT_BOOL get abstract dispid:DISPID_IHTMLCOMPUTEDSTYLE+1
    property italic             atype:VARIANT_BOOL get abstract dispid:DISPID_IHTMLCOMPUTEDSTYLE+2
    property underline          atype:VARIANT_BOOL get abstract dispid:DISPID_IHTMLCOMPUTEDSTYLE+3
    property overline           atype:VARIANT_BOOL get abstract dispid:DISPID_IHTMLCOMPUTEDSTYLE+4
    property strikeOut          atype:VARIANT_BOOL get abstract dispid:DISPID_IHTMLCOMPUTEDSTYLE+5
    property subScript          atype:VARIANT_BOOL get abstract dispid:DISPID_IHTMLCOMPUTEDSTYLE+6
    property superScript        atype:VARIANT_BOOL get abstract dispid:DISPID_IHTMLCOMPUTEDSTYLE+7
    property explicitFace       atype:VARIANT_BOOL get abstract dispid:DISPID_IHTMLCOMPUTEDSTYLE+8
    property fontWeight         atype:long get abstract dispid:DISPID_IHTMLCOMPUTEDSTYLE+9
    property fontSize           atype:long get abstract dispid:DISPID_IHTMLCOMPUTEDSTYLE+10
    property fontName           atype:TCHAR get abstract dispid:DISPID_IHTMLCOMPUTEDSTYLE+11
    property hasBgColor         atype:VARIANT_BOOL get abstract dispid:DISPID_IHTMLCOMPUTEDSTYLE+12
    property textColor          atype:DWORD get abstract dispid:DISPID_IHTMLCOMPUTEDSTYLE+13
    property backgroundColor    atype:DWORD get abstract dispid:DISPID_IHTMLCOMPUTEDSTYLE+14
    property preFormatted       atype:VARIANT_BOOL get abstract dispid:DISPID_IHTMLCOMPUTEDSTYLE+15
    property direction          atype:VARIANT_BOOL get abstract dispid:DISPID_IHTMLCOMPUTEDSTYLE+16
    property blockDirection     atype:VARIANT_BOOL get abstract dispid:DISPID_IHTMLCOMPUTEDSTYLE+17
    property OL                 atype:VARIANT_BOOL get abstract dispid:DISPID_IHTMLCOMPUTEDSTYLE+18

    method HRESULT IsEqual     (in type:IHTMLComputedStyle* arg:pComputedStyle, \
                                out type:VARIANT_BOOL* arg:pfEqual)

//-------------------------------------------------------------------------
//
//  IDisplayPointer
//
//-------------------------------------------------------------------------

enum HT_OPTIONS prefix:HT_OPT_ 
    eval AllowAfterEOL value:0x1

enum HT_RESULTS prefix:HT_RESULTS_ 
    eval Glyph value:0x1

enum DISPLAY_MOVEUNIT prefix:DISPLAY_MOVEUNIT_
    eval PreviousLine     value:1
    eval NextLine         value:2
    eval CurrentLineStart value:3
    eval CurrentLineEnd   value:4
    eval TopOfWindow      value:5
    eval BottomOfWindow   value:6
    
enum DISPLAY_GRAVITY prefix:DISPLAY_GRAVITY_
    eval PreviousLine     value:1
    eval NextLine         value:2

enum DISPLAY_BREAK prefix:DISPLAY_BREAK_
    eval None       value:0x0
    eval Block      value:0x1
    eval Break      value:0x2

enum COORD_SYSTEM prefix:COORD_SYSTEM_
    eval GLOBAL
    eval PARENT
    eval CONTAINER
    eval CONTENT
    eval FRAME

interface IDisplayPointer super:IUnknown custom guid:3050f69e-98b5-11cf-bb82-00aa00bdce0b
    method      HRESULT MoveToPoint             (in type:POINT arg:ptPoint, \
                                                 in type:COORD_SYSTEM arg:eCoordSystem, \
                                                 in type:IHTMLElement* arg:pElementContext, \
                                                 in type:DWORD arg:dwHitTestOptions, \
                                                 out type:DWORD* arg:pdwHitTestResults)
    method      HRESULT MoveUnit                (in type:DISPLAY_MOVEUNIT arg:eMoveUnit,\
                                                 in type:LONG arg:lXPos)
    method      HRESULT PositionMarkupPointer   (in type:IMarkupPointer* arg:pMarkupPointer)
    method      HRESULT MoveToPointer           (in type:IDisplayPointer* arg:pDispPointer)
    method      HRESULT SetPointerGravity       (in type:POINTER_GRAVITY arg:eGravity)
    method      HRESULT GetPointerGravity       (out type:POINTER_GRAVITY* arg:peGravity)
    method      HRESULT SetDisplayGravity       (in type:DISPLAY_GRAVITY arg:eGravity)
    method      HRESULT GetDisplayGravity       (out type:DISPLAY_GRAVITY* arg:peGravity)
    method      HRESULT IsPositioned            (out type:BOOL* arg:pfPositioned)
    method      HRESULT Unposition              ()
    method      HRESULT IsEqualTo               (in type:IDisplayPointer* arg:pDispPointer, out type:BOOL* arg:pfIsEqual)
    method      HRESULT IsLeftOf                (in type:IDisplayPointer* arg:pDispPointer, out type:BOOL* arg:pfIsLeftOf)
    method      HRESULT IsRightOf               (in type:IDisplayPointer* arg:pDispPointer, out type:BOOL* arg:pfIsRightOf)
    method      HRESULT IsAtBOL                 (out type:BOOL* arg:pfBOL)
    method      HRESULT MoveToMarkupPointer     (in type:IMarkupPointer* arg:pPointer,\
                                                 in type:IDisplayPointer* arg:pDispLineContext)
    method      HRESULT ScrollIntoView          ()
    method      HRESULT GetLineInfo             (out type:ILineInfo** arg:ppLineInfo)
    method      HRESULT GetFlowElement          (out type:IHTMLElement** arg:ppLayoutElement)
    method      HRESULT QueryBreaks             (out type:DWORD* arg:pdwBreaks)
    
//-------------------------------------------------------------------------
//
//  IDisplayServices
//
//-------------------------------------------------------------------------

interface IDisplayServices super:IUnknown custom guid:3050f69d-98b5-11cf-bb82-00aa00bdce0b
    method      HRESULT CreateDisplayPointer    (out type:IDisplayPointer** arg:ppDispPointer)
    method      HRESULT TransformRect           (in out type:RECT* arg:pRect, \
                                                 in type:COORD_SYSTEM arg:eSource, \
                                                 in type:COORD_SYSTEM arg:eDestination, \
                                                 in type:IHTMLElement* arg:pIElement )
    method      HRESULT TransformPoint          (in out type:POINT* arg:pPoint, \
                                                 in type:COORD_SYSTEM arg:eSource, \
                                                 in type:COORD_SYSTEM arg:eDestination, \
                                                 in type:IHTMLElement* arg:pIElement)    
    method      HRESULT GetCaret                (out type:IHTMLCaret** arg:ppCaret)
    method      HRESULT GetComputedStyle        (in type:IMarkupPointer* arg:pPointer, \
                                                 out type:IHTMLComputedStyle** arg:ppComputedStyle)
    method      HRESULT ScrollRectIntoView      (in type:IHTMLElement* arg:pIElement,\
                                                 in type:RECT arg:rect)
    method      HRESULT HasFlowLayout           (in type:IHTMLElement* arg:pIElement, \
                                                 out type:BOOL* arg:pfHasFlowLayout)
//-------------------------------------------------------------------------
//
//  IHtmlDlgSafeHelper
//
//-------------------------------------------------------------------------

interface IHtmlDlgSafeHelper super:IDispatch custom guid:3050f81a-98b5-11cf-bb82-00aa00bdce0b
    refmethod HtmlDlgSafeHelper:choosecolordlg
    refmethod HtmlDlgSafeHelper:getCharset
    refprop HtmlDlgSafeHelper:Fonts
    refprop HtmlDlgSafeHelper:BlockFormats

class HtmlDlgSafeHelper primaryinterface:IHtmlDlgSafeHelper	guid:3050f819-98b5-11cf-bb82-00aa00bdce0b
    method HRESULT choosecolordlg      dispid:1			maxstrlen:pdlNoLimit  	(in optional type:VARIANT arg:initColor, \
                                                   out retval type:VARIANT* arg:rgbColor)
    method HRESULT getCharset      dispid:2		maxstrlen:pdlNoLimit  	(in type:BSTR arg:fontName, \
                                                   out retval type:VARIANT* arg:charset)
    property  Fonts 	atype:IDispatch*        dispid:3        type:IDispatch*   \
         dwFlags:0   abstract get
    property  BlockFormats 	atype:IDispatch*    dispid:4        type:IDispatch*   \
         dwFlags:0   abstract get


interface IBlockFormats super:IDispatch	custom guid:3050f830-98b5-11cf-bb82-00aa00bdce0b
    refprop BlockFormats:_NewEnum
    refprop BlockFormats:Count
    refmethod BlockFormats:Item

class BlockFormats primaryinterface:IBlockFormats	guid:3050f831-98b5-11cf-bb82-00aa00bdce0b
    property  _NewEnum 	atype:IUnknown*        dispid:DISPID_NEWENUM        type:IUnknown*   \
         dwFlags:0   abstract get       restricted 

    property  Count     atype:long      dispid:1        type:long \
         dwFlags:0      abstract get 

    method HRESULT Item     dispid:DISPID_VALUE     maxstrlen:pdlNoLimit    (in type:VARIANT* arg:pvarIndex, \
                                                   out retval type:BSTR* arg:pbstrBlockFormat)

interface IFontNames super:IDispatch custom guid:3050f839-98b5-11cf-bb82-00aa00bdce0b
    refprop FontNames:_NewEnum
    refprop FontNames:Count
    refmethod FontNames:Item

class FontNames primaryinterface:IFontNames	guid:3050f83a-98b5-11cf-bb82-00aa00bdce0b
    property  _NewEnum  atype:IUnknown*        dispid:DISPID_NEWENUM        type:IUnknown*   \
         dwFlags:0   abstract get   restricted 

    property  Count     atype:long      dispid:1        type:long \
         dwFlags:0   abstract get 

    method HRESULT Item	    dispid:DISPID_VALUE	    maxstrlen:pdlNoLimit    (in type:VARIANT* arg:pvarIndex, \
                                                   out retval type:BSTR* arg:pbstrFontName)


#endif //_MSHTMEXT_PDL_

