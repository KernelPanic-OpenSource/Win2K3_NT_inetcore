// --------------------------------------------------------------------------
// HOTWIZ.IDL
// Copyright (c) 1993-1998 Microsoft Corporation, All Rights Reserved
// --------------------------------------------------------------------------
// This file will be processed by the MIDL tool to
// produce the type library (HOTWIZ.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";

#include "hotdisp.h"

cpp_quote("//--------------------------------------------------------------------------------")
cpp_quote("// HOTWIZ.H")
cpp_quote("//--------------------------------------------------------------------------------")
cpp_quote("// (C) Copyright 1993-1998 Microsoft Corporation.  All Rights Reserved.")
cpp_quote("//")
cpp_quote("// THIS CODE AND INFORMATION IS PROVIDED \"AS IS\" WITHOUT WARRANTY OF")
cpp_quote("// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO")
cpp_quote("// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A")
cpp_quote("// PARTICULAR PURPOSE.")
cpp_quote("//--------------------------------------------------------------------------------")
cpp_quote("")
cpp_quote("#pragma comment(lib, \"uuid.lib\")")
cpp_quote("")
cpp_quote("// --------------------------------------------------------------------------")
cpp_quote("// GUIDS")
cpp_quote("// --------------------------------------------------------------------------")
cpp_quote("")
cpp_quote("// {61a81654-75fb-11d2-8c0e-00c04fa31009}")
cpp_quote("DEFINE_GUID(IID_IOEHotWizardOM, 0x61a81654, 0x75fb, 0x11d2, 0x8c, 0x0e, 0x00, 0xc0, 0x4f, 0xa3, 0x10, 0x09);")
cpp_quote("")
cpp_quote("// {E9C8B700-88B1-11d2-8C1F-00C04FA31009}")
cpp_quote("DEFINE_GUID(CLSID_OEHotMailWizard, 0xe9c8b700, 0x88b1, 0x11d2, 0x8c, 0x1f, 0x0, 0xc0, 0x4f, 0xa3, 0x10, 0x9);")
cpp_quote("")
cpp_quote("// {2A17F622-88C6-11d2-8C20-00C04FA31009}")
cpp_quote("DEFINE_GUID(IID_IHotWizard, 0x2a17f622, 0x88c6, 0x11d2, 0x8c, 0x20, 0x0, 0xc0, 0x4f, 0xa3, 0x10, 0x9);")
cpp_quote("")
cpp_quote("// {00ce6c10-88b2-11d2-8c1f-00c04fa31009}")
cpp_quote("DEFINE_GUID(IID_IHotWizardHost, 0x00ce6c10, 0x88b2, 0x11d2, 0x8C, 0x1f, 0x00, 0xc0, 0x4f, 0xa3, 0x10, 0x09);")
cpp_quote("")

//---------------------------------------------------------------------------
// IHotWizardHost Interface
//---------------------------------------------------------------------------
[
    object,
    uuid(00ce6c10-88b2-11d2-8c1f-00c04fa31009),
    helpstring("IHotWizardHost Interface"),
    pointer_default(unique)
]
interface IHotWizardHost : IUnknown
{
    HRESULT CreateAccountFromINS(
        [in]        BSTR            bstrIns);
};


//---------------------------------------------------------------------------
// IHotWizard Interface
//---------------------------------------------------------------------------
[
    object,
    uuid(2A17F622-88C6-11d2-8C20-00C04FA31009),
    helpstring("IHotWizard Interface"),
    pointer_default(unique)
]
interface IHotWizard : IUnknown
{
    HRESULT Show(
        [in]        HWND            hwndOwner,
        [in]        LPWSTR          pszUrl,
        [in]        LPWSTR          pszCaption,
        [in]        IHotWizardHost *pHost,
        [in]        RECT           *prc);
};



[
    uuid(79ca3712-8893-11d2-8c1f-00c04fa31009),
    version(1.0),
    helpstring("Microsoft Outlook Express Wizard Type Library")
]
library HOTWIZ
{
    importlib("stdole2.tlb");

    // ---------------------------------------------------------------------------------------
    // IID_IOEHotWizardOM
    // ---------------------------------------------------------------------------------------
    [
        uuid(61a81654-75fb-11d2-8c0e-00c04fa31009),
        odl,
        oleautomation,
        dual
    ]
    interface IOEHotWizardOM : IDispatch
    {
        [id(DISPID_IOEACCTWIZ_SET_PROP_SZ)]             HRESULT setPropSz([in] BSTR bstrProp, [in] BSTR bstrVal);
        [id(DISPID_IOEACCTWIZ_GET_PROP_SZ)]             HRESULT getPropSz([in] BSTR bstrProp, [retval, out] BSTR *pbstrVal);
        [id(DISPID_IOEACCTWIZ_CLEAR_PROPS)]             HRESULT clearProps();
        [id(DISPID_IOEACCTWIZ_NEW_ACCOUNT)]             HRESULT createAccount(BSTR bstrINS);
        [id(DISPID_IOEACCTWIZ_CLOSE)]                   HRESULT close([in] VARIANT_BOOL fPrompt);
        [propget, id(DISPID_IOEACCTWIZ_WIDTH)]          HRESULT width([retval, out] LONG *pl);
        [propput, id(DISPID_IOEACCTWIZ_WIDTH)]          HRESULT width([in] LONG l);
        [propget, id(DISPID_IOEACCTWIZ_HEIGHT)]         HRESULT height([retval, out] LONG *pl);
        [propput, id(DISPID_IOEACCTWIZ_HEIGHT)]         HRESULT height([in] LONG l);
    }
};
