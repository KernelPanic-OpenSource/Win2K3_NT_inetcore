!IF 0

Copyright (c) 1989-2000  Microsoft Corporation

Module Name:

    sources.

Abstract:

    This file specifies the target component being built and the list of
    sources files needed to build that component.  Also specifies optional
    compiler switches and libraries that are unique for the component being
    built.

History:    6-05-96   scousens  (Scott Cousens)   Created
            2-25-98   scotth    cleaned up and commented the heck out of it
            4-07-00   bryanst   (Bryan Starbuck)
!ENDIF

TARGETPATH=obj
TARGETTYPE=LIBRARY
TARGETNAME=ieproxy
PASS1_PUBLISH={$(O)\ieproxy.lib=$(PROJECT_LIB_PATH)\ieproxy.lib}

NO_BROWSER_FILE=1
INCLUDES=.;$(O);$(ADMIN_INC_PATH)

# These are used in makefile.def when building the idl files.
PASS0_HEADERDIR = $(O)
PASS0_SOURCEDIR = $(O)
MIDL_UUIDDIR    = $(O)
MIDL_TLBDIR     = $(O)

MIDL_NO_ROBUST  = 1
# needs to run on Win95 and NT 3.51
# specify -Oicf once
MIDL_OPTIMIZATION=$(MIDL_OPTIMIZATION:-Oicf=) -Oicf

C_DEFINES       = -DWIN32=300 -D_CAIRO_=300 -DREGISTER_PROXY_DLL

!if !$(FREEBUILD)
C_DEFINES       = $(C_DEFINES) -DDEBUG
!endif

# HOW TO ADD A FILE:
#
# You should simply add your files to the lists below according
# to these instructions.  In most cases, you should not need to
# add anything to makefile.inc.  The inference rules there cover
# almost everything but the hole in the ozone layer.
#
# IDL FILES
#
#  To add foo.idl to the build (as an example):
#
#  1) add foo.idl to the SOURCES list.  This will create foo.tlb and obj\foo.h.
#
#  2) copy foo.idl, foo.tlb, and foo.h to their proper directories so external
#     projects can use them.  Here's how:
#
#        a) foo.idl: add $(SDK_INC_PATH)\foo.idl to the NTTARGETFILE0 list.
#           This will copy the idl file to $(SDK_INC_PATH) before it is
#           built.
#
#           This will copy the type library to $(SDK_LIB_PATH).
#
#        a) foo.h: add $(SDK_INC_PATH)\foo.h or $(PROJECT_INC_PATH)\foo.h (depending
#           on where you want the header file propagated) to the NTTARGETFILES
#           list.  This will copy the header file to $(SDK_INC_PATH)
#           or \nt\private\windows\inc, so other projects can #include it.
#
#  3) Optional: to add your object library to ACTXPRXY.DLL, add entries the sources macro
#     below and update $(BASEDIR)\mergedcomponents\actprxy\dlldatax.c as appropriate.
#
#  4) Optional: to add your GUIDs to UUID.LIB, add an entry to
#     ..\uuid\makefile.inc and ..\uuid\sources
#
#

# To build files inside genx\ie\inc, add them to the SOURCES list.
# For example, given foo.idl, the results will be:
#
#       genx\ie\inc\foo.tlb
#       genx\ie\inc\obj\foo.h
#


# (Notice this is in alphabetical order.  Hint. Hint.)

SOURCES= \
    activaut.idl    \
    activdbg.idl    \
    activscp.idl    \
    AutoDiscovery.idl    \
    callback.idl    \
    dbgprop.idl     \
    dimm.idl        \
    dispex.idl      \
    dlmgridl.idl    \
    docobj.idl      \
    downloadmgr.idl \
    dslisten.idl    \
    dwnnot.idl      \
    dxtrans.idl     \
    dxtransp.idl    \
    dxtmsft.idl    \
    dxtmsft3.idl    \
    exdisp.idl      \
    htiface.idl     \
    htiframe.idl    \
    htmlfilter.idl  \
    htprivwn.idl \
    httprequest.idl \
    iedial.idl      \
    iextag.idl      \
    imgutil.idl     \
    imnact.idl      \
    imnxport.idl    \
    inetsdk.idl     \
    interned.idl    \
    mimeedit.idl    \
    mimeinfo.idl    \
    mimeole.idl     \
    mshtmhst.idl    \
    mshtml.idl      \
    msnotify.idl    \
    msoeapi.idl     \
    mstime.idl		\
    notftn.idl      \
    objsafe.idl     \
    ocmm.idl        \
    omscript.idl    \
    optary.idl      \
    perhist.idl     \
    prgsnk.idl      \
    recalc.idl      \
    ratingsp.idl    \
    safeocx.idl     \
    servprov.idl    \
    subsmgr.idl     \
    urlhist.idl     \
    urlmki.idl      \
    urlmon.idl      \
    urltrack.idl    \
    vervec.idl      \
    webcheck.idl    \
    mshtmlp.c       \
    $(O)\activscp_p.c \
    $(O)\callback_p.c \
    $(O)\docobj_p.c \
    $(O)\dxtmsft_p.c \
    $(O)\dxtmsft3_p.c \
    $(O)\dxtrans_p.c \
    $(O)\dxtransp_p.c \
    $(O)\htiface_p.c \
    $(O)\htiframe_p.c \
    $(O)\htprivwn_p.c \
    $(O)\mimeinfo_p.c \
    $(O)\objsafe_p.c \
    $(O)\ocmm_p.c   \
    $(O)\servprov_p.c \
    $(O)\subsmgr_p.c \
    $(O)\urlhist_p.c \
    $(O)\webcheck_p.c

# Special case rules for building headers

NTTARGETFILE0 = \
    $(O)\wininetp.h \
    $(O)\wininet.h \
    $(O)\mshtml.h \
    $(O)\mshtmlcpp.h \
    $(O)\dxtpriv.h \
    $(O)\dxvector.h \
    $(O)\dxtrans.h \
    $(O)\dxtransp.h \
    $(O)\mstime.h \
    $(O)\mstime.tlb \
    $(O)\dxtmsft.h \
    $(O)\downloadmgr.h \
    $(O)\winhttpi.h \
    $(O)\winhttp.h
    

# .h files A-L
PASS0_PUBLISH= \
    {$(O)\activaut.h=$(SDK_INC_PATH)\activaut.h} \
    {$(O)\activdbg.h=$(SDK_INC_PATH)\activdbg.h} \
    {$(O)\activscp.h=$(SDK_INC_PATH)\activscp.h} \
    {$(O)\AutoDiscovery.h=$(SDK_INC_PATH)\AutoDiscovery.h} \
    {$(O)\AutoDiscovery.tlb=$(SDK_LIB_PATH)\AutoDiscovery.tlb} \
    {$(O)\callback.h=$(SDK_INC_PATH)\callback.h} \
    {$(O)\dbgprop.h=$(SDK_INC_PATH)\dbgprop.h} \
    {$(O)\dimm.h=$(SDK_INC_PATH)\dimm.h} \
    {$(O)\dispex.h=$(SDK_INC_PATH)\dispex.h} \
    {$(O)\dlmgridl.h=$(SDK_INC_PATH)\dlmgridl.h} \
    {$(O)\docobj.h=$(SDK_INC_PATH)\docobj.h} \
    {$(O)\dslisten.h=$(SDK_INC_PATH)\dslisten.h} \
    {$(O)\dwnnot.h=$(SDK_INC_PATH)\dwnnot.h} \
    {$(O)\exdisp.h=$(SDK_INC_PATH)\exdisp.h} \
    {$(O)\dxvector.h=$(SDK_INC_PATH)\dxvector.h} \
    {$(O)\htiface.h=$(SDK_INC_PATH)\htiface.h} \
    {$(O)\htiframe.h=$(SDK_INC_PATH)\htiframe.h} \
    {$(O)\htmlfilter.h=$(SDK_INC_PATH)\htmlfilter.h}\
    {$(O)\iedial.h=$(SDK_INC_PATH)\iedial.h}\
    {$(O)\dxtrans.h=$(SDK_INC_PATH)\dxtrans.h} \
    {$(O)\dxtrans.tlb=$(SDK_LIB_PATH)\dxtrans.tlb} \
    {$(O)\dxtransp.h=$(PROJECT_INC_PATH)\dxtransp.h} \
    {$(O)\dxtransp.tlb=$(PROJECT_LIB_PATH)\dxtransp.tlb} \
    {$(O)\dxtpriv.h=$(PROJECT_INC_PATH)\dxtpriv.h} \
    {$(O)\dxtmsft.h=$(SDK_INC_PATH)\dxtmsft.h} \
    {$(O)\dxtmsft3_i.c=$(SDK_INC_PATH)\dxtmsft3guid.h} \
    {$(O)\dxtransp_i.c=$(PROJECT_INC_PATH)\dxtranspguid.h} \
    {$(O)\httprequest.h=$(PROJECT_INC_PATH)\httprequest.h} \
    {$(O)\httprequest_i.c=$(PROJECT_INC_PATH)\httprequest_i.c} \
    {$(O)\iextag.h=$(SDK_INC_PATH)\iextag.h} \
    {$(O)\imgutil.h=$(SDK_INC_PATH)\imgutil.h} \
    {$(O)\mstime.h=$(SDK_INC_PATH)\mstime.h} \
    {$(O)\imnact.h=$(SDK_INC_PATH)\imnact.h} \
    {$(O)\imnxport.h=$(SDK_INC_PATH)\imnxport.h} \
    {$(O)\inetsdk.h=$(SDK_INC_PATH)\inetsdk.h} \
    {$(O)\interned.h=$(PROJECT_INC_PATH)\interned.h} \
    {$(O)\mimeedit.h=$(SDK_INC_PATH)\mimeedit.h} \
    {$(O)\mimeinfo.h=$(SDK_INC_PATH)\mimeinfo.h} \
    {$(O)\mimeole.h=$(SDK_INC_PATH)\mimeole.h} \
    {$(O)\mshtmhst.h=$(SDK_INC_PATH)\mshtmhst.h} \
    {$(O)\mshtml.h=$(SDK_INC_PATH)\mshtmlc.h} \
    {$(O)\mshtmlcpp.h=$(SDK_INC_PATH)\mshtml.h} \
    {$(O)\msnotify.h=$(SDK_INC_PATH)\msnotify.h} \
    {$(O)\msoeapi.h=$(SDK_INC_PATH)\msoeapi.h} \
    {$(O)\notftn.h=$(SDK_INC_PATH)\notftn.h} \
    {$(O)\objsafe.h=$(SDK_INC_PATH)\objsafe.h} \
    {$(O)\ocmm.h=$(SDK_INC_PATH)\ocmm.h} \
    {$(O)\omscript.h=$(SDK_INC_PATH)\omscript.h} \
    {$(O)\optary.h=$(SDK_INC_PATH)\optary.h} \
    {$(O)\perhist.h=$(SDK_INC_PATH)\perhist.h} \
    {$(O)\prgsnk.h=$(SDK_INC_PATH)\prgsnk.h} \
    {$(O)\ratingsp.h=$(PROJECT_INC_PATH)\ratingsp.h} \
    {$(O)\recalc.h=$(SDK_INC_PATH)\recalc.h} \
    {$(O)\safeocx.h=$(SDK_INC_PATH)\safeocx.h} \
    {$(O)\servprov.h=$(SDK_INC_PATH)\servprov.h} \
    {$(O)\subsmgr.h=$(SDK_INC_PATH)\subsmgr.h} \
    {$(O)\urlhist.h=$(SDK_INC_PATH)\urlhist.h} \
    {$(O)\urlmki.h=$(SDK_INC_PATH)\urlmki.h} \
    {$(O)\urlmon.h=$(SDK_INC_PATH)\urlmon.h} \
    {$(O)\urltrack.h=$(SDK_INC_PATH)\urltrack.h} \
    {$(O)\vervec.h=$(SDK_INC_PATH)\vervec.h} \
    {$(O)\webcheck.h=$(SDK_INC_PATH)\webcheck.h} \
    {$(O)\winhttp.h=$(SDK_INC_PATH)\winhttp.h} \
    {$(O)\winhttpi.h=$(PROJECT_INC_PATH)\winhttpi.h} \
    {$(O)\wininet.h=$(SDK_INC_PATH)\wininet.h} \
    {$(O)\wininetp.h=$(SDK_INC_PATH)\winineti.h} \
    {$(O)\exdisp.tlb=$(SDK_LIB_PATH)\exdisp.tlb} \
    {$(O)\httprequest.tlb=$(PROJECT_LIB_PATH)\httprequest.tlb} \
    {$(O)\iextag.tlb=$(SDK_LIB_PATH)\iextag.tlb} \
    {$(O)\mshtml.tlb=$(SDK_LIB_PATH)\mshtml.tlb} \
    {$(O)\omscript.tlb=$(SDK_LIB_PATH)\omscript.tlb} \
    {$(O)\subsmgr.tlb=$(SDK_LIB_PATH)\subsmgr.tlb} \
    {$(O)\webcheck.tlb=$(SDK_LIB_PATH)\webcheck.tlb} \
    {$(O)\dxtmsft.tlb=$(SDK_LIB_PATH)\dxtmsft.tlb} \
    {$(O)\dxtmsft3.tlb=$(SDK_LIB_PATH)\dxtmsft3.tlb} \
    {$(O)\downloadmgr.h=$(SDK_INC_PATH)\downloadmgr.h} \
    \
    {activaut.idl=$(SDK_INC_PATH)\activaut.idl} \
    {activdbg.idl=$(SDK_INC_PATH)\activdbg.idl} \
    {activscp.idl=$(SDK_INC_PATH)\activscp.idl} \
    {AutoDiscovery.idl=$(SDK_INC_PATH)\AutoDiscovery.idl} \
    {dimm.idl=$(SDK_INC_PATH)\dimm.idl} \
    {dispex.idl=$(SDK_INC_PATH)\dispex.idl} \
    {docobj.idl=$(SDK_INC_PATH)\docobj.idl} \
    {dslisten.idl=$(SDK_INC_PATH)\dslisten.idl} \
    {$(O)\mstime.tlb=$(SDK_LIB_PATH)\mstime.tlb} \
    {dxatlpb.h=$(SDK_INC_PATH)\dxatlpb.h} \
    {dxbounds.h=$(SDK_INC_PATH)\dxbounds.h} \
    {dxclrhlp.h=$(SDK_INC_PATH)\dxclrhlp.h} \
    {dxtdbg.h=$(SDK_INC_PATH)\dxtdbg.h} \
    {dxterror.h=$(SDK_INC_PATH)\dxterror.h} \
    {dxtguid.c=$(SDK_INC_PATH)\dxtguid.c} \
    {dxtmpl.h=$(SDK_INC_PATH)\dxtmpl.h} \
    {dxsurfb.h=$(SDK_INC_PATH)\dxsurfb.h} \
    {dxsurfb.cpp=$(SDK_INC_PATH)\dxsurfb.cpp} \
    {dtbase.h=$(SDK_INC_PATH)\dtbase.h} \
    {dtbase.cpp=$(SDK_INC_PATH)\dtbase.cpp} \
    {dxhelp3.h=$(SDK_INC_PATH)\dxhelp3.h} \
    {dxhelp3.cpp=$(SDK_INC_PATH)\dxhelp3.cpp} \
    {dxhelper.h=$(SDK_INC_PATH)\dxhelper.h} \
    {dxtrans.idl=$(SDK_INC_PATH)\dxtrans.idl} \
    {dxtransp.idl=$(SDK_INC_PATH)\dxtransp.idl} \
    {dxtmsft.idl=$(SDK_INC_PATH)\dxtmsft.idl} \
    {dxtmsft3.idl=$(SDK_INC_PATH)\dxtmsft3.idl} \
    {downloadmgr.idl=$(SDK_INC_PATH)\downloadmgr.idl} \
    {dwnnot.idl=$(SDK_INC_PATH)\dwnnot.idl} \
    {htiface.idl=$(SDK_INC_PATH)\htiface.idl} \
    {htiframe.idl=$(SDK_INC_PATH)\htiframe.idl} \
    {htmlfilter.idl=$(SDK_INC_PATH)\htmlfilter.idl} \
    {httprequest.idl=$(SDK_INC_PATH)\httprequest.idl} \
    {httprequestid.h=$(SDK_INC_PATH)\httprequestid.h} \
    {iedial.idl=$(SDK_INC_PATH)\iedial.idl} \
    {iextag.idl=$(SDK_INC_PATH)\iextag.idl} \
    {imgutil.idl=$(SDK_INC_PATH)\imgutil.idl} \
    {imnact.idl=$(SDK_INC_PATH)\imnact.idl} \
    {imnxport.idl=$(SDK_INC_PATH)\imnxport.idl} \
    {inetsdk.idl=$(SDK_INC_PATH)\inetsdk.idl} \
    {interned.idl=$(PROJECT_INC_PATH)\interned.idl} \
    {mimeedit.idl=$(SDK_INC_PATH)\mimeedit.idl} \
    {mimeinfo.idl=$(SDK_INC_PATH)\mimeinfo.idl} \
    {mimeole.idl=$(SDK_INC_PATH)\mimeole.idl} \
    {mshtmhst.idl=$(SDK_INC_PATH)\mshtmhst.idl} \
    {mshtml.idl=$(SDK_INC_PATH)\mshtml.idl} \
    {msiehost.h=$(SDK_INC_PATH)\msiehost.h} \
    {msnotify.idl=$(SDK_INC_PATH)\msnotify.idl} \
    {msoeapi.idl=$(SDK_INC_PATH)\msoeapi.idl} \
    {mstimeid.h=$(SDK_INC_PATH)\mstimeid.h} \
    {mstime.idl=$(SDK_INC_PATH)\mstime.idl} \
    {notftn.idl=$(SDK_INC_PATH)\notftn.idl} \
    {objsafe.idl=$(SDK_INC_PATH)\objsafe.idl} \
    {ocmm.idl=$(SDK_INC_PATH)\ocmm.idl} \
    {omscript.idl=$(SDK_INC_PATH)\omscript.idl} \
    {optary.idl=$(SDK_INC_PATH)\optary.idl} \
    {perhist.idl=$(SDK_INC_PATH)\perhist.idl} \
    {prgsnk.idl=$(SDK_INC_PATH)\prgsnk.idl} \
    {recalc.idl=$(SDK_INC_PATH)\recalc.idl} \
    {ratingsp.idl=$(SDK_INC_PATH)\ratingsp.idl} \
    {safeocx.idl=$(SDK_INC_PATH)\safeocx.idl} \
    {servprov.idl=$(SDK_INC_PATH)\servprov.idl} \
    {subsmgr.idl=$(SDK_INC_PATH)\subsmgr.idl} \
    {urlhist.idl=$(SDK_INC_PATH)\urlhist.idl} \
    {urlmon.idl=$(SDK_INC_PATH)\urlmon.idl} \
    {urltrack.idl=$(SDK_INC_PATH)\urltrack.idl} \
    {vervec.idl=$(SDK_INC_PATH)\vervec.idl} \
    {webcheck.idl=$(SDK_INC_PATH)\webcheck.idl} \
    {xmldom.idl=$(SDK_INC_PATH)\xmldom.idl} \
    {xmldso.idl=$(SDK_INC_PATH)\xmldso.idl} \
    \
    {advpub.h=$(SDK_INC_PATH)\advpub.h} \
    {capi.h=$(SDK_INC_PATH)\capi.h} \
    {cryptdlg.h=$(SDK_INC_PATH)\cryptdlg.h} \
    {exdispid.h=$(SDK_INC_PATH)\exdispid.h} \
    {hlguids.h=$(SDK_INC_PATH)\hlguids.h} \
    {hlinkez.h=$(SDK_INC_PATH)\hlinkez.h} \
    {icwcfg.h=$(SDK_INC_PATH)\icwcfg.h} \
    {idispids.h=$(SDK_INC_PATH)\idispids.h} \
    {iehelpid.h=$(SDK_INC_PATH)\iehelpid.h} \
    {iert.h=$(SDK_INC_PATH)\iert.h} \
    {iimgctx.h=$(SDK_INC_PATH)\iimgctx.h} \
    {inethelp.h=$(SDK_INC_PATH)\inethelp.h} \
    {inetreg.h=$(SDK_INC_PATH)\inetreg.h} \
    {inseng.h=$(SDK_INC_PATH)\inseng.h} \
    {jobexec.h=$(SDK_INC_PATH)\jobexec.h} \
    {lendian.hpp=$(SDK_INC_PATH)\lendian.hpp} \
    {marqinfo.h=$(SDK_INC_PATH)\marqinfo.h} \
    {mimedisp.h=$(SDK_INC_PATH)\mimedisp.h} \
    {mshtmcid.h=$(SDK_INC_PATH)\mshtmcid.h} \
    {mshtmdbg.h=$(PROJECT_INC_PATH)\mshtmdbg.h} \
    {mshtmdid.h=$(SDK_INC_PATH)\mshtmdid.h} \
    {mshtmlrc.h=$(PROJECT_INC_PATH)\mshtmlrc.h} \
    {msoav.h=$(SDK_INC_PATH)\msoav.h} \
    {msxmldid.h=$(SDK_INC_PATH)\msxmldid.h} \
    {newimp.h=$(PROJECT_INC_PATH)\msoeimp.h} \
    {perftags.h=$(SDK_INC_PATH)\perftags.h} \
    {pkgguid.h=$(SDK_INC_PATH)\pkgguid.h} \
    {pkgmgr.h=$(SDK_INC_PATH)\pkgmgr.h} \
    {platform.h=$(SDK_INC_PATH)\platform.h} \
    {rowpos.h=$(SDK_INC_PATH)\rowpos.h} \
    {scrptids.h=$(SDK_INC_PATH)\scrptids.h} \
    {unaligned.hpp=$(SDK_INC_PATH)\unaligned.hpp} \
    {wab.h=$(SDK_INC_PATH)\wab.h} \
    {wabapi.h=$(SDK_INC_PATH)\wabapi.h} \
    {wabcode.h=$(SDK_INC_PATH)\wabcode.h} \
    {wabdefs.h=$(SDK_INC_PATH)\wabdefs.h} \
    {wabiab.h=$(SDK_INC_PATH)\wabiab.h} \
    {wabmem.h=$(SDK_INC_PATH)\wabmem.h} \
    {wabnot.h=$(SDK_INC_PATH)\wabnot.h} \
    {wabtags.h=$(SDK_INC_PATH)\wabtags.h} \
    {wabutil.h=$(SDK_INC_PATH)\wabutil.h} \
    {xmldomdid.h=$(SDK_INC_PATH)\xmldomdid.h} \
    {xmldsodid.h=$(SDK_INC_PATH)\xmldsodid.h}

!if "$(BUILD_PRODUCT)" != "NT"
MISCFILES = \
    w95base.txt     \
    nt4base.txt     \
    alphbase.txt
!endif
