/*++=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

Copyright (c) 2001  Microsoft Corporation

Module Name:

    testlog.idl

Abstract:

    Generates typelib and COM interface definitions for the TestLog project.
    
Author:

    Paul M Midgen (pmidge) 22-February-2001


Revision History:

    30-March-2001 pmidge
        Created

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--*/


#include "..\inc\dispids.h"


[
  uuid(6422d0c1-1d66-11d5-b5fc-00005a990a0c),
  helpstring("TestLog v1.0 Type Library"),
  lcid(0x0000),
  version(1.0)
]
library TestLog
{
  importlib ("stdole32.tlb");
  importlib ("stdole2.tlb");

// ====================================== ITestLog ======================================
  [
    uuid(6422d0c2-1d66-11d5-b5fc-00005a990a0c), 
    object, local, dual,
    nonextensible,
    helpstring("ITestLog Interface"),
    pointer_default(unique)
  ]
  interface ITestLog : IDispatch
  {
    [
      id(DISPID_TESTLOG_OPEN),
      helpstring("opens the logfile")
    ]
    HRESULT Open(
              [in]           BSTR     filename,
              [in]           BSTR     title,
              [in, optional] VARIANT* mode,
              [out, retval]  VARIANT* success
              );

    [
      id(DISPID_TESTLOG_CLOSE),
      helpstring("closes the logfile")
    ]
    HRESULT Close(void);

    [
      id(DISPID_TESTLOG_BEGINTEST),
      helpstring("marks the beginning of a test")
    ]
    HRESULT BeginTest(
              [in] BSTR    testname,
              [in] VARIANT testid
              );

    [
      id(DISPID_TESTLOG_ENDTEST),
      helpstring("marks the end of a test")
    ]
    HRESULT EndTest(void);

    [
      id(DISPID_TESTLOG_FINALRESULT),
      helpstring("logs pass or fail status for a test")
    ]
    HRESULT FinalResult(
              [in]           VARIANT status,
              [in, optional] VARIANT reason
              );

    [
      id(DISPID_TESTLOG_ENTERFUNCTION),
      helpstring("called on function entry")
    ]
    HRESULT EnterFunction(
              [in]           BSTR    name,
              [in, optional] VARIANT params,
              [in, optional] VARIANT returntype
              );

    [
      id(DISPID_TESTLOG_LEAVEFUNCTION),
      helpstring("called on function exit")
    ]
    HRESULT LeaveFunction(
              [in, optional] VARIANT returnvalue
              );

    [
      id(DISPID_TESTLOG_TRACE),
      helpstring("outputs a message to the logfile")
    ]
    HRESULT Trace(
              [in] BSTR message
              );
  };
// ======================================================================================

// ===================================== coclasses ======================================
  [
    uuid(6422d0c3-1d66-11d5-b5fc-00005a990a0c),
    helpstring("TestLog class")
  ]
  coclass TestLog
  {
    [default] interface ITestLog;
  };
// ======================================================================================
}
